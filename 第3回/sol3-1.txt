PImage img_out;
int w,h;
float th;
void setup()
{
  size(400, 400);
  surface.setResizable(true);
  img_in = loadImage("sample1-1.jpg");
  w=img_in.width; h=img_in.height; 
  img_out = createImage( w, h, RGB ); 
  colorMode(RGB,255,255,255);
  surface.setSize(w*2,h);
  noLoop();
  th=45.0/180.0*3.141592;
}

void draw()
{
  img_in.loadPixels();
  for ( int y = 0; y < h; y+=1)
  {
    for ( int x = 1; x < w-1; x+=1)
    {
        int X=int((x-w/2)*cos(th)-(y-h/2)*sin(th)+w/2); 
        int Y=int((x-w/2)*sin(th)+(y-h/2)*cos(th)+h/2);
         if( (X>=0)&&(X<w)&&(Y>=0)&&(Y<h) )
        {
          int OldPos = x + y*w;
          int NewPos = X + Y*w; 
          img_out.pixels[NewPos] = img_in.pixels[OldPos];
        }

       }
  }
  img_out.updatePixels();
  image(img_in, 0, 0); image(img_out, img_in.width, 0);
  img_out.save("out.bmp");
}

float  gray(int x, int y){
  int pos = x + w*y;
  color c = img_in.pixels[pos];
  float r = red( c );
  float g = green( c );
  float b = blue( c );
  return( 0.3 * r + 0.59 * g + 0.11 * b);
}